/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    updateItemCallback(this, &Screen2ViewBase::updateItemCallbackHandler),
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PAPER_BG_240X320_ID));
    add(image1);

    buttonWithLabel1.setXY(13, 273);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_DISABLED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AYMU));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);
    add(buttonWithLabel1);

    textArea3.setPosition(50, 0, 140, 35);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(18, 31, 48));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_X1OA));
    add(textArea3);

    scrollListMin.setPosition(9, 0, 72, 219);
    scrollListMin.setHorizontal(true);
    scrollListMin.setCircular(true);
    scrollListMin.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollListMin.setSwipeAcceleration(10);
    scrollListMin.setDragAcceleration(10);
    scrollListMin.setNumberOfItems(60);
    scrollListMin.setPadding(0, 0);
    scrollListMin.setSnapping(true);
    scrollListMin.setOvershootPercentage(75);
    scrollListMin.setDrawableSize(79, 0);
    scrollListMin.setDrawables(scrollListMinListItems, updateItemCallback);
    add(scrollListMin);

    scrollListSec.setPosition(81, 0, 79, 219);
    scrollListSec.setHorizontal(true);
    scrollListSec.setCircular(true);
    scrollListSec.setEasingEquation(touchgfx::EasingEquations::quintEaseOut);
    scrollListSec.setSwipeAcceleration(10);
    scrollListSec.setDragAcceleration(10);
    scrollListSec.setNumberOfItems(60);
    scrollListSec.setPadding(0, 0);
    scrollListSec.setSnapping(true);
    scrollListSec.setOvershootPercentage(75);
    scrollListSec.setDrawableSize(79, 0);
    scrollListSec.setDrawables(scrollListSecListItems, updateItemCallback);
    add(scrollListSec);

    textAreaSubsec.setPosition(166, 38, 48, 156);
    textAreaSubsec.setColor(touchgfx::Color::getColorFromRGB(173, 36, 55));
    textAreaSubsec.setLinespacing(0);
    textAreaSubsec.setWideTextAction(WIDE_TEXT_CHARWRAP_ELLIPSIS);
    Unicode::snprintf(textAreaSubsecBuffer, TEXTAREASUBSEC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1ARP).getText());
    textAreaSubsec.setWildcard(textAreaSubsecBuffer);
    textAreaSubsec.setTypedText(touchgfx::TypedText(T___SINGLEUSE_S7RB));
    add(textAreaSubsec);

    textArea2_2.setXY(103, 177);
    textArea2_2.setColor(touchgfx::Color::getColorFromRGB(87, 40, 15));
    textArea2_2.setLinespacing(0);
    textArea2_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LZFJ));
    add(textArea2_2);

    textArea2_1.setXY(28, 177);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(87, 40, 15));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YE2Q));
    add(textArea2_1);

    buttonWithLabelStop.setXY(8, 219);
    buttonWithLabelStop.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    buttonWithLabelStop.setLabelText(touchgfx::TypedText(T___SINGLEUSE_I0MN));
    buttonWithLabelStop.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStop.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStop.setVisible(false);
    buttonWithLabelStop.setAction(buttonCallback);
    add(buttonWithLabelStop);

    buttonWithLabelReset.setXY(123, 219);
    buttonWithLabelReset.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    buttonWithLabelReset.setLabelText(touchgfx::TypedText(T___SINGLEUSE_2QH4));
    buttonWithLabelReset.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelReset.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelReset.setAction(buttonCallback);
    add(buttonWithLabelReset);

    buttonWithLabelStart.setXY(8, 219);
    buttonWithLabelStart.setBitmaps(touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_LIGHT_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID));
    buttonWithLabelStart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_XOHI));
    buttonWithLabelStart.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabelStart.setAction(buttonCallback);
    add(buttonWithLabelStart);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{
    scrollListMin.initialize();
    for (int i = 0; i < scrollListMinListItems.getNumberOfDrawables(); i++)
    {
        scrollListMinListItems[i].initialize();
    }
    scrollListSec.initialize();
    for (int i = 0; i < scrollListSecListItems.getNumberOfDrawables(); i++)
    {
        scrollListSecListItems[i].initialize();
    }
}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction1
        //When buttonWithLabel1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenSlideTransitionWest();
    }
    if (&src == &buttonWithLabelStop)
    {
        //InteractionStop
        //When buttonWithLabelStop clicked call virtual function
        //Call onButtonStop
        onButtonStop();
    }
    if (&src == &buttonWithLabelStart)
    {
        //InteractionStart
        //When buttonWithLabelStart clicked call virtual function
        //Call onButtonStart
        onButtonStart();
    }
    if (&src == &buttonWithLabelReset)
    {
        //InteractionReset
        //When buttonWithLabelReset clicked call virtual function
        //Call onButtonReset
        onButtonReset();
    }
}

void Screen2ViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollListMinListItems)
    {
        scrollListMinUpdateItem(scrollListMinListItems[containerIndex], itemIndex);
    }

    if (items == &scrollListSecListItems)
    {
        scrollListSecUpdateItem(scrollListSecListItems[containerIndex], itemIndex);
    }
}
